# Environment
NODE_ENV=development

# Logging (from @midcurve/services)
# Supported levels: 'debug', 'info', 'warn', 'error', 'silent'
# Default: 'info' in production, 'debug' in development, 'silent' in test
# LOG_LEVEL=info

# Database (PostgreSQL via Prisma)
# IMPORTANT: Use separate databases for development and testing!
#
# Development database (port 5432) - For manual testing via UI
# Start with: cd ../midcurve-services && npm run db:dev:up
# This database persists your test data between sessions
DATABASE_URL="postgresql://devuser:devpass@localhost:5432/midcurve_dev?schema=public"
#
# Test database (port 5433) - For automated tests only
# Start with: cd ../midcurve-services && npm run db:test:up
# This database is reset/cleared during test runs

# Auth.js Configuration
AUTH_URL=http://localhost:3000
AUTH_SECRET=your-256-bit-secret-here-generate-with-openssl-rand-base64-32

# API Configuration
# API_KEY_SALT=your-api-key-salt-here

# External Services
# RPC URLs (shared with @midcurve/services)
# RPC_URL_ETHEREUM=https://eth-mainnet.g.alchemy.com/v2/YOUR_API_KEY
# RPC_URL_ARBITRUM=https://arb-mainnet.g.alchemy.com/v2/YOUR_API_KEY
# RPC_URL_BASE=https://base-mainnet.g.alchemy.com/v2/YOUR_API_KEY
# RPC_URL_BSC=https://bsc-dataseed1.binance.org
# RPC_URL_POLYGON=https://polygon-mainnet.g.alchemy.com/v2/YOUR_API_KEY
# RPC_URL_OPTIMISM=https://opt-mainnet.g.alchemy.com/v2/YOUR_API_KEY

# CoinGecko API (optional, for token enrichment)
# COINGECKO_API_KEY=your-coingecko-api-key-here

# Rate Limiting (Future - Vercel KV)
# KV_REST_API_URL=
# KV_REST_API_TOKEN=
